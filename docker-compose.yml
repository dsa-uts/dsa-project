services:
  frontend:
    build: ./dsa-frontend

  backend:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: dsa-backend/Dockerfile
    ports:
      # ホストのlocalhost:8000番ポートをコンテナの8000番ポートにマッピング
      # 注) Swagger UIにアクセスし、APIをテストするために開放している。
      #     WebUIからアクセスする場合は開放しなくても良い。
      - "127.0.0.1:8000:8000"
    volumes:
      - ./upload:/app/upload
      - ./resource:/resource
    environment:
      TZ: Asia/Tokyo
    secrets:
      - db_app_password
      - admin_info_json
    restart: always

  judge:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: dsa-judgeserver/Dockerfile
    volumes:
      # ホスト環境のDockerサービスにアクセスするためのDockerソケットのマウント
      # 注) ホスト環境がUbuntuである必要あり
      - /var/run/docker.sock:/var/run/docker.sock
      # アップロードされたファイル用のディレクトリのマウント
      - ./upload:/app/upload
    environment:
      DOCKER_HOST: unix:///var/run/docker.sock
      TZ: Asia/Tokyo
    secrets:
      - db_app_password
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "127.0.0.1:80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./nginx/log/:/var/log/nginx/:rw
    restart: always
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started

  db:
    build: ./dsa-db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      # Just for debugging of backend, need to delete in production.
      - "127.0.0.1:5432:5432"
    secrets:
      - db_app_password
      - db_root_password
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_root_password
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./dsa-db/init.sql:/docker-entrypoint-initdb.d/init.sql
      # バックアップのための、ダンプファイル共有ディレクトリ
      - ./backup:/backup

  adminer:
    image: adminer:5.3.0
    restart: always
    ports:
      - "127.0.0.1:18080:8080"
    depends_on:
      db:
        condition: service_started

volumes:
  db-data:
  frontend-node_modules:
  backend-go-pkg:
  judge-go-pkg:


secrets:
  db_app_password:
    file: ./config/db_app_password.txt
  db_root_password:
    file: ./config/db_root_password.txt
  admin_info_json:
    file: ./config/admin.json
